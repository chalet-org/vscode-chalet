{
	"name": "vscode-chalet",
	"displayName": "Chalet",
	"description": "Support for Chalet projects in Visual Studio Code",
	"version": "0.7.6",
	"publisher": "chalet-org",
	"license": "BSD-3-Clause",
	"icon": "chalet-logo.png",
	"readme": "README.md",
	"bugs": {
		"url": "https://github.com/chalet-org/vscode-chalet/issues"
	},
	"repository": {
		"type": "git",
		"url": "https://github.com/chalet-org/vscode-chalet.git"
	},
	"engines": {
		"vscode": "^1.64.0"
	},
	"sponsor": {
		"url": "https://github.com/sponsors/rewrking"
	},
	"homepage": "https://www.chalet-work.space",
	"qna": "https://github.com/chalet-org/vscode-chalet/issues",
	"keywords": [
		"C",
		"C++",
		"Objective-C",
		"Build System"
	],
	"categories": [
		"Programming Languages",
		"Other"
	],
	"activationEvents": [
		"onLanguage:c",
		"onLanguage:cpp",
		"onLanguage:json",
		"onLanguage:jsonc",
		"onCommand:chalet.buildArchitecture",
		"onCommand:chalet.buildConfiguration",
		"onCommand:chalet.buildTarget",
		"onCommand:chalet.buildToolchain",
		"onCommand:chalet.buildStrategy",
		"onCommand:chalet.buildPathStyle",
		"onCommand:chalet.chaletCommand",
		"onCommand:chalet.initializeProject",
		"onCommand:chalet.initializeCMakeProject",
		"onCommand:chalet.generateProjectFiles",
		"onCommand:chalet.runChalet",
		"onCommand:chalet.testTerminal",
		"workspaceContains:**/chalet.json",
		"workspaceContains:**/chalet.yaml",
		"workspaceContains:**/.chaletrc",
		"onFileSystem:chalet-schema"
	],
	"main": "./out/extension.min.js",
	"contributes": {
		"languages": [
			{
				"id": "jsonc",
				"extensions": [
					".chaletrc"
				],
				"filenames": [
					".chaletrc",
					".chalet/config.json"
				]
			}
		],
		"configuration": {
			"title": "Chalet",
			"properties": {
				"chalet.useDebugChalet": {
					"type": "boolean",
					"default": false,
					"description": "Use chalet-debug instead of chalet in commands"
				},
				"chalet.statusBarButtons": {
					"type": "boolean",
					"default": true,
					"description": "Display chalet actions in the status bar"
				}
			}
		},
		"commands": [
			{
				"command": "chalet.buildArchitecture",
				"title": "Chalet: Change Build Architecture"
			},
			{
				"command": "chalet.buildConfiguration",
				"title": "Chalet: Change Build Configuration"
			},
			{
				"command": "chalet.buildTarget",
				"title": "Chalet: Change Run Target"
			},
			{
				"command": "chalet.buildToolchain",
				"title": "Chalet: Change Build Toolchain or Preset"
			},
			{
				"command": "chalet.buildStrategy",
				"title": "Chalet: Change Build Strategy"
			},
			{
				"command": "chalet.buildPathStyle",
				"title": "Chalet: Change Build Path Style"
			},
			{
				"command": "chalet.chaletCommand",
				"title": "Chalet: Change Chalet Command"
			},
			{
				"command": "chalet.initializeProject",
				"title": "Chalet: Initialize Project"
			},
			{
				"command": "chalet.initializeCMakeProject",
				"title": "Chalet: Initialize Project with CMake"
			},
			{
				"command": "chalet.generateProjectFiles",
				"title": "Chalet: Generate VS Code Project Files"
			},
			{
				"command": "chalet.runChalet",
				"title": "Chalet: Run Chalet Command"
			},
			{
				"command": "chalet.testTerminal",
				"title": "Chalet: Test Terminal"
			}
		],
		"jsonValidation": [
			{
				"fileMatch": [
					"chalet.json",
					"chalet.*.json",
					"chalet-*.json"
				],
				"url": "chalet-schema:///schema-chalet-json"
			},
			{
				"fileMatch": [
					".chaletrc",
					".chalet/config.json"
				],
				"url": "chalet-schema:///schema-settings-json"
			}
		],
		"yamlValidation": [
			{
				"fileMatch": [
					"chalet.yaml",
					"chalet.*.yaml",
					"chalet-*.yaml"
				],
				"url": "chalet-schema:///schema-chalet-json"
			}
		]
	},
	"scripts": {
		"vscode:prepublish": "npm run esbuild-base -- --minify",
		"esbuild-base": "esbuild ./src/extension.ts --bundle --outfile=out/extension.min.js --external:vscode --format=cjs --platform=node",
		"build": "npm run esbuild-base -- --sourcemap",
		"lint": "eslint src --ext ts",
		"watch": "npm run esbuild-base -- --sourcemap --watch",
		"pretest": "npm run build && npm run lint",
		"test": "ts-node ./test/runTest.ts"
	},
	"devDependencies": {
		"@types/glob": "8.1.0",
		"@types/mocha": "10.0.1",
		"@types/node": "20.3.1",
		"@types/node-fetch": "2.6.11",
		"@types/vscode": "1.64.0",
		"@typescript-eslint/eslint-plugin": "5.59.11",
		"@typescript-eslint/parser": "5.59.11",
		"@vscode/test-electron": "2.3.3",
		"esbuild": "0.17.19",
		"eslint": "8.43.0",
		"mocha": "10.2.0",
		"prettier": "2.8.8",
		"ts-node": "10.9.1",
		"typescript": "5.0.4"
	},
	"dependencies": {
		"bind-decorator": "1.0.11",
		"glob": "10.2.7",
		"node-fetch": "3.3.2",
		"tree-kill": "1.2.2",
		"vscode-uri": "3.0.7"
	}
}